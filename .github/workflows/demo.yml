name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Cython
        run: pip install cython

      - name: Build extensions
        run: python setup.py build_ext --inplace

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: pytest

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install flake8
        run: pip install flake8

      - name: Lint with flake8 (critical errors only)
        run: flake8 flaskr --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Lint with flake8 (style check)
        run: flake8 flaskr --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  docker_Build_Push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: qjb8m9h/flaskr:latest

      - name: Deploy via SSH to EC2
        uses: aadeyiga/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Hostname: $(hostname)"
            echo "User: $(whoami)"
            echo "Current directory: $(pwd)"
            echo "Checking Docker version..."
            docker --version
            echo "Pulling latest image: ${{ secrets.DOCKERHUB_USERNAME }}/flaskr:latest"
            docker pull "${{ secrets.DOCKERHUB_USERNAME }}/flaskr:latest"
            echo "Stopping existing container (if running)..."
            docker stop flaskr || true
            echo "Removing existing container (if exists)..."
            docker rm flaskr || true
            echo "Running new container..."
            docker run -d --name flaskr -p 80:8080 "${{ secrets.DOCKERHUB_USERNAME }}/flaskr:latest"

